[project]
name = "epidemic-sim-api"
version = "0.1.0"
description = "FastAPI backend for the epidemic simulation platform"
authors = [
  { name = "Vector Platform", email = "engineering@vector.local" }
]
requires-python = ">=3.11"
dependencies = [
  "fastapi==0.115.4",
  "uvicorn[standard]==0.32.0",
  "pydantic==2.9.2",
  "pydantic-settings==2.4.0",
  "redis==5.2.0",
  "rq==1.15.1",
  "sqlalchemy[asyncio]==2.0.36",
  "asyncpg==0.29.0",
  "alembic==1.13.2",
  "structlog==24.3.0",
  "python-json-logger==2.0.7",
  "orjson==3.10.7",
  "tenacity==9.0.0",
  "httpx==0.27.2",
  "slowapi==0.1.9",
  "opentelemetry-sdk==1.27.0",
  "opentelemetry-exporter-otlp==1.27.0",
  "opentelemetry-instrumentation-fastapi==0.48b0",
  "opentelemetry-instrumentation-redis==0.48b0",
  "sse-starlette==1.6.1",
  "prometheus-client==0.21.1",
  "prometheus-fastapi-instrumentator==6.1.0",
  "sentry-sdk[fastapi]==2.17.0",
  "passlib[bcrypt]==1.7.4",
  "pyjwt[crypto]==2.10.0",
  "geojson==3.1.0"
]

[project.optional-dependencies]
dev = [
  "pytest==8.3.3",
  "pytest-asyncio==0.23.8",
  "pytest-cov==5.0.0",
  "httpx==0.27.2",
  "mypy==1.12.0",
  "ruff==0.7.2",
  "types-redis==4.6.0.20241008",
  "types-python-dateutil==2.9.0.20241009"
]

[tool.ruff]
line-length = 100
exclude = ["alembic"]
select = ["E", "F", "I", "N", "UP", "B", "S", "ASYNC", "RUF", "PIE", "SIM"]
fix = true

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
strict = true
plugins = []

[tool.pytest.ini_options]
testpaths = ["apps/api/tests"]
addopts = "--strict-markers --disable-warnings"
asyncio_mode = "strict"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"
